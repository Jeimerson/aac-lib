---
# version: 1.0.7

- hosts: localhost
  gather_facts: true
  become_user: root

- name: TZ
  import_playbook: aac-base-tz.yaml

- name: SELinux
  import_playbook: aac-base-selinux.yaml

- hosts: localhost
  tasks:
     - name: golang RPM Key
       become: yes
       rpm_key:
         state: present
         key: https://mirror.go-repo.io/centos/RPM-GPG-KEY-GO-REPO
       when: ansible_os_family == "RedHat" and ansible_distribution_major_version is version("8",'<')

     - name: golang repo
       become: yes
       get_url:
         url: https://mirror.go-repo.io/centos/go-repo.repo
         dest: /etc/yum.repos.d
         mode: 0644
       when: ansible_os_family == "RedHat" and ansible_distribution_major_version is version("8",'<')

     - name: install golang dependency
       become: yes
       package:
         name:
           - gcc
         state: latest
       when: ansible_distribution != "MacOSX"

     - name: install golang
       become: yes
       package:
         name:
           - golang
         state: latest
       when: (ansible_os_family == "RedHat" and ansible_distribution_major_version is version("8",'<')) or
             (ansible_os_family == "Debian" and ansible_distribution_major_version is version("9",'!=')) or
             (ansible_distribution == "Fedora")

     - name: install golang RHEL/CentOS > 7
       become: yes
       package:
         name:
           - go-toolset
         state: latest
       when: (ansible_os_family == "RedHat" and ansible_distribution_major_version is version("7",'>')) and
             (ansible_distribution != "Fedora")

     - name: Download Go for Debian 9
       get_url:
         url: https://dl.google.com/go/go1.12.5.linux-amd64.tar.gz
         dest: "{{ansible_user_dir}}"
       when: (ansible_distribution == "Debian" and ansible_distribution_major_version is version("9",'='))

     - name: Unbundle Go
       unarchive:
         src: "{{ansible_user_dir}}/go1.12.5.linux-amd64.tar.gz"
         dest: "{{ansible_user_dir}}"
       when: (ansible_distribution == "Debian" and ansible_distribution_major_version is version("9",'='))

     - name: Set Debian 9 Fact
       set_fact:
         ipath: "{{ansible_user_dir}}"
       when: (ansible_distribution == "Debian" and ansible_distribution_major_version is version("9",'='))

     - name: Install Go for Debian 9
       become: yes
       shell: "cp -r {{ipath}}/go /usr/local; chown -R root:root /usr/local/go"
       args:
         executable: /bin/bash
       when: (ansible_distribution == "Debian" and ansible_distribution_major_version is version("9",'='))

     - name: Install Dependencies for MacOSX
       homebrew:
         name:
           - golang
         state: latest
       when: ansible_distribution == "MacOSX"

     - name: Install Dependencies for Photon
       homebrew:
         name:
           - go
         state: latest
       when: ansible_distribution == "VMware Photon OS"

     - name: Set profile.d BASH settings
       become: yes
       blockinfile:
         path: /etc/profile.d/go.sh
         block: |
           export PATH="$PATH:/usr/local/go/bin"
           export GOPATH="$HOME/go"
           export GOROOT=/usr/local/go
         mode: 0644
         create: yes
       when: (ansible_distribution == "Debian" and ansible_distribution_major_version is version("9",'='))

     - name: Set profile.d CSH settings
       become: yes
       blockinfile:
         path: /etc/profile.d/go.csh
         block: |
           setenv PATH="$PATH:$HOME/go/bin"
           setenv GOPATH="$HOME/go"
           setenv GOROOT=/usr/local/go
         mode: 0644
         create: yes
       when: (ansible_distribution == "Debian" and ansible_distribution_major_version is version("9",'='))

     - name: Cleanup HOME files
       file:
         path: "{{ansible_user_dir}}/go1.12.5.linux-amd64.tar.gz"
         state: absent
       when: (ansible_distribution == "Debian" and ansible_distribution_major_version is version("9",'='))

     - name: Cleanup HOME Directory
       file:
         path: "{{ansible_user_dir}}/go"
         state: absent
       when: (ansible_distribution == "Debian" and ansible_distribution_major_version is version("9",'='))

     - name: Getting vctui Debian 9
       become: yes
       shell: ". /etc/profile.d/go.sh; go install github.com/thebsdbox/vctui@latest"
       args:
         executable: /bin/bash
       when: (ansible_distribution == "Debian" and ansible_distribution_major_version is version("9",'='))

     - name: Getting vctui
       become: no
       shell: "go install github.com/thebsdbox/vctui@latest"
       args:
         executable: /bin/bash
       when: (ansible_os_family == "Debian" and ansible_distribution_major_version is version("9",'!=')) or
             (ansible_os_family != "Debian")

     - name: Create bin diretory
       file:
         path: "{{ ansible_user_dir }}/bin"
         state: directory
         mode: 0755
       ignore_errors: yes
       when: (ansible_os_family == "RedHat") or
             (ansible_distribution == "MacOSX") or
             (ansible_os_family == "Debian" and ansible_distribution_major_version is version("9",'!='))

# This fails on Photon OS due to current build issues
     - name: Install vctui
       copy: 
         src: "{{ansible_user_dir}}/go/bin/vctui"
         dest: "{{ansible_user_dir}}/bin/vctui"
         mode: 0755
       when: (ansible_os_family == "RedHat") or
             (ansible_distribution == "MacOSX") or
             (ansible_os_family == "Debian" and ansible_distribution_major_version is version("9",'!='))

- name: Fix SELinux
  import_playbook: aac-base-fixselinux.yaml
...
