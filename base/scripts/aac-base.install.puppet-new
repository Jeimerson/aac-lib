#!/bin/sh
#
# Copyright (c) 2016 AstroArch Consulting, Inc. All rights reserved
#
#
#
# Create a Base Install of a puppet setver
#
# Target: CentOS/RHEL 7
#
###

function puppet() {
	echo "Install Puppet Server"
	rpm -Uvh https://yum.puppetlabs.com/puppetlabs-release-pc1-el-7.noarch.rpm
	yum -y install puppetserver
	grep -v dns_alt_names /etc/puppetlabs/puppet/puppet.conf > /tmp/puppet.conf
	cat >> /tmp/puppet.conf << EOF
dns_alt_names = puppet,puppet.d.astroarch.com,puppet.internal.astroarch.com
[main]
certname = puppet.internal.astroarch.com
server = puppet.internal.astroarch.com
environment = production
runinterval = 1h
EOF
	cp /etc/puppetlabs/puppet/puppet.conf /etc/puppetlabs/puppet/puppet.conf.orig
	cp /tmp/puppet.conf /etc/puppetlabs/puppet/puppet.conf

	echo "Setup Hiera"
	if [ ! -e /etc/puppet/hieradata ]
	then
		mkdir /etc/puppet/hieradata
	fi
	if [ ! -e /etc/puppet/hieradata/global.yaml ]
	then
		cat > /etc/puppet/hieradata/global.yaml << EOF
---
  classes:
    - 'aac-profile::base'

  desktop:
    - 'aac-profile::nvidia'

  puppet:
    - 'aac-profile::puppet'

  git:
    - 'aac-profile::git'

  owncloud:
    - 'aac-profile::owncloud'

  jenkins:
    - 'aac-profile::jenkins'

  pxe:
    - 'aac-profile::pxe'

  dmz:
    - 'aac-profile::dmz'
EOF
	fi

	if [ ! -e /etc/puppet/manifests/side.pp ]
	then
		cat > /etc/puppet/manifests/site.pp << EOF
# Copyright (c) 2016 AstroArch Consulting, Inc. All rights reserved
#
# Create a Base Configuration 
Package {
	allow_virtual => true,
}

###
# Use Hiera to set classes
###
node default {
        hiera_include('classes',[])
}

###
# Everyone Gets This
###
#include aac-profile::base
EOF
	fi

	echo "Create Profile Base Class"
	if [ ! -e /etc/puppet/modules/aac-profile ]
	then
		puppet module generate aac-profile --skip-interview
	fi
	if [ ! -e /etc/puppet/modules/aac-profile/manifests/base.pp ]
	then
		cat > /etc/puppet/modules/aac-profile/manifests/base.pp << EOF
# Copyright (c) 2016 AstroArch Consulting, Inc. All rights reserved
#
# Create a Base Configuration Profile
class aac-profile::base {
  ### Up-to-date Puppet Repo
  # include profile::puppetlabs
  # part of aac-base.install

  ### Up-to-date Puppet/Facter/Mcollective
  include aac-profile::mcollective

  ### Mcollective Facts
  file{"/etc/mcollective/facts.yaml":
      owner    => root,
      group    => root,
      mode     => 400,
      loglevel => debug, # reduce noise in Puppet reports
      content  => inline_template("<%= scope.to_hash.reject { |k,v| k.to_s =~ /(uptime_seconds|timestamp|free)/ }.to_yaml %>"), # exclude rapidly changing facts
    }
  ### Up-to-date VMware Tools for 6.0 U2
  case $virtual {
     vmware: {
        if $kernel == 'Linux' {
                ### ==> Eventually Replace with Hiera Entry
                # Force_install required for CentOS/RHEL 7
                class {'vmwaretools':
                        version => '10.0.9-3917699',
                        archive_url => 'puppet',
                        archive_md5 => '160979c6d9f5b0979d81b3b6c15d0b1a',
                        keep_working_dir => true,
                        force_install => true,
                        }
                }
        }
     default: {}
  }

  notify {'Profile Base Run':}
}
EOF
	fi

	if [ ! -e /etc/puppet/modules/aac-profile/manifests/mcollective.pp ]
	then
		cat > /etc/puppet/modules/aac-profile/manifests/mcollective.pp << EOF
# Copyright (c) 2016 AstroArch Consulting, Inc. All rights reserved
#
# Create a Mcollective/Puppet pre 4.0 configuration
class aac-profile::mcollective {
  package {['mcollective','puppet','facter']:
        ensure => latest,
  }

  # Run
  service {'mcollective':
    ensure  => running,
    enable  => true,
    require => Package['mcollective'],
  }

  service {'puppet':
    ensure  => running,
    enable  => true,
    require => Package['puppet'],
  }

  # Restart the service when any settings change
  # Package['mcollective'] -> Mcollective::Setting <| |> ~> Service['mcollective']

  notify {'Profile Mcollective Run':}
}
EOF
fi

	echo "Start Puppet Master"
	if [ $VERSION_ID -gt 6 ]
	then
		systemctl start puppetmaster.service
		systemctl enable puppetmaster.service
		echo "Update Firewall"
		firewall-cmd --permanent --add-port=8140/tcp
		firewall-cmd --reload
	else
		service puppetmaster start
		chkconfig puppetmaster on
		### TODO: IPTABLES Configuration
	fi

	puppet resource service puppetmaster ensure=running enable=true
	puppet module install puppetlabs-stdlib
	puppet module install CraigWatson1987-vmwaretools

	echo "Fix firewall"
	firewall-cmd --permanent --zone=public --add-port=8140/tcp
	firewall-cmd --reload

	echo "Fix SELinux"
	restorecon -R -v /etc/puppet
	restorecon -R -v /var/lib/hiera
	chcon -R -t puppetmaster_t  /var/lib/hiera

	if [ $VERSION_ID -gt 6 ]
	then
		systemctl restart puppetmaster.service
	else
		service puppetmaster restart
		chkconfig puppetmaster on
	fi
}

